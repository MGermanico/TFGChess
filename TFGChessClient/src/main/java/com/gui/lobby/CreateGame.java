/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.gui.lobby;

import com.connutils.Request;
import com.gui.general.Requestable;
import com.conn.Client;
import com.connutils.Action;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.gui.general.principalframe.PrincipalFrame;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author migue
 */
public class CreateGame extends javax.swing.JPanel implements Requestable{

    /**
     * Creates new form CreateGame
     */
    
    PrincipalFrame principalFrame;
    
    private List<Action> actions = new ArrayList<Action>(){{
        add(new JoinedAction());
        add(new FailedAction());
    }};
    
    public CreateGame(PrincipalFrame principalFrame) {
        initComponents();
        this.principalFrame = principalFrame;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lobbyNameLabel = new javax.swing.JLabel();
        passwordRadioButton = new javax.swing.JRadioButton();
        passwordTextField = new javax.swing.JTextField();
        lobbyTextField = new javax.swing.JTextField();
        createButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(51, 51, 51));

        lobbyNameLabel.setText("Nombre de sala: ");

        passwordRadioButton.setText("Contrase√±a");
        passwordRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordRadioButtonActionPerformed(evt);
            }
        });

        passwordTextField.setEditable(false);
        passwordTextField.setBackground(new java.awt.Color(255, 255, 255));
        passwordTextField.setEnabled(false);

        createButton.setText("CREAR");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lobbyNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lobbyTextField))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(passwordRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(createButton)
                            .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(170, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lobbyNameLabel)
                    .addComponent(lobbyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordRadioButton)
                    .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addComponent(createButton)
                .addContainerGap(178, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void passwordRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordRadioButtonActionPerformed
        if (this.passwordRadioButton.isSelected()) {
            this.passwordTextField.setEnabled(true);
            this.passwordTextField.setEditable(true);
//            this.jTextField1.setText("");
        }else{
            this.passwordTextField.setEnabled(false);
            this.passwordTextField.setEditable(false);
            this.passwordTextField.setText("");
        }
    }//GEN-LAST:event_passwordRadioButtonActionPerformed

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
        if (tryToCreateGame()) {
            //CARGANDO...
        }else{
            JOptionPane.showMessageDialog(this, "Valores mal asignados");
        }
    }//GEN-LAST:event_createButtonActionPerformed

    private boolean tryToCreateGame() {
        String nameText = this.lobbyTextField.getText();
        
        if(nameText.isBlank()) return false;
        
        Request createGameRequest = new Request("create");
        createGameRequest.put("name", nameText);
        if (this.passwordRadioButton.isSelected()) {
            String passwordText = this.lobbyTextField.getText();
        
            if(passwordText.isBlank()) return false;
            
            createGameRequest.put("password", passwordText);
        }
        
        try {
            Client.sendRequest(createGameRequest);
            return true;
        } catch (JsonProcessingException ex) {
            return false;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createButton;
    private javax.swing.JLabel lobbyNameLabel;
    private javax.swing.JTextField lobbyTextField;
    private javax.swing.JRadioButton passwordRadioButton;
    private javax.swing.JTextField passwordTextField;
    // End of variables declaration//GEN-END:variables

    @Override
    public void gotRequest(Request request) {
        for (Action action : actions) {
            if(action.getType().equals(request.getHeader()))
                action.execute(request);
        }
    }

    private class FailedAction implements Action{
        @Override
        public void execute(Request request) {
            if (request.getOrDefault("on", "none").equals("create")) {
                String errorMessage = request.getOrDefault("message", "Error desconocido");
                JOptionPane.showMessageDialog(CreateGame.this, errorMessage);
            }
        }
        @Override
        public String getType() {
            return "failed";
        }
    }
    private class JoinedAction implements Action{
        @Override
        public void execute(Request request) {
            principalFrame.setUpGame(
                    LobbyBuilder
                            .createLobby(principalFrame, request)
                            .build()
            );
        }
        @Override
        public String getType() {
            return "joined";
        }
    }
}
